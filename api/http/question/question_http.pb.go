// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.0
// source: http/question/question_http.proto

package question

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Score  int32  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Value  string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Option) Reset() {
	*x = Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{0}
}

func (x *Option) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Option) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Option) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Option) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type QuestionContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*Option `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	Title   string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *QuestionContent) Reset() {
	*x = QuestionContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionContent) ProtoMessage() {}

func (x *QuestionContent) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionContent.ProtoReflect.Descriptor instead.
func (*QuestionContent) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{1}
}

func (x *QuestionContent) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *QuestionContent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Questions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId    int64              `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Contents []*QuestionContent `protobuf:"bytes,2,rep,name=contents,proto3" json:"contents,omitempty"`
}

func (x *Questions) Reset() {
	*x = Questions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Questions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Questions) ProtoMessage() {}

func (x *Questions) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Questions.ProtoReflect.Descriptor instead.
func (*Questions) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{2}
}

func (x *Questions) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Questions) GetContents() []*QuestionContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

// 创建问题
type CreatQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId    int64              `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Contents []*QuestionContent `protobuf:"bytes,2,rep,name=contents,proto3" json:"contents,omitempty"`
}

func (x *CreatQuestionRequest) Reset() {
	*x = CreatQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatQuestionRequest) ProtoMessage() {}

func (x *CreatQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatQuestionRequest.ProtoReflect.Descriptor instead.
func (*CreatQuestionRequest) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{3}
}

func (x *CreatQuestionRequest) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CreatQuestionRequest) GetContents() []*QuestionContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

type CreatQuestionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatQuestionReply) Reset() {
	*x = CreatQuestionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatQuestionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatQuestionReply) ProtoMessage() {}

func (x *CreatQuestionReply) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatQuestionReply.ProtoReflect.Descriptor instead.
func (*CreatQuestionReply) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{4}
}

// 修改问题内容
type ModifyQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId    int64              `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Contents []*QuestionContent `protobuf:"bytes,2,rep,name=contents,proto3" json:"contents,omitempty"`
}

func (x *ModifyQuestionRequest) Reset() {
	*x = ModifyQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyQuestionRequest) ProtoMessage() {}

func (x *ModifyQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyQuestionRequest.ProtoReflect.Descriptor instead.
func (*ModifyQuestionRequest) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{5}
}

func (x *ModifyQuestionRequest) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ModifyQuestionRequest) GetContents() []*QuestionContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

type ModifyQuestionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyQuestionReply) Reset() {
	*x = ModifyQuestionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyQuestionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyQuestionReply) ProtoMessage() {}

func (x *ModifyQuestionReply) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyQuestionReply.ProtoReflect.Descriptor instead.
func (*ModifyQuestionReply) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{6}
}

// 获取问题分页
type ListQuestionByPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId int64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *ListQuestionByPageRequest) Reset() {
	*x = ListQuestionByPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuestionByPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuestionByPageRequest) ProtoMessage() {}

func (x *ListQuestionByPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuestionByPageRequest.ProtoReflect.Descriptor instead.
func (*ListQuestionByPageRequest) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{7}
}

func (x *ListQuestionByPageRequest) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type ListQuestionByPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId int64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	// string createTime = 2;
	// string updateTime = 3;
	Contents []*QuestionContent `protobuf:"bytes,2,rep,name=contents,proto3" json:"contents,omitempty"`
}

func (x *ListQuestionByPageReply) Reset() {
	*x = ListQuestionByPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuestionByPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuestionByPageReply) ProtoMessage() {}

func (x *ListQuestionByPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuestionByPageReply.ProtoReflect.Descriptor instead.
func (*ListQuestionByPageReply) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{8}
}

func (x *ListQuestionByPageReply) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListQuestionByPageReply) GetContents() []*QuestionContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

type AddUserAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId   int64    `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Choices []string `protobuf:"bytes,2,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *AddUserAnswerRequest) Reset() {
	*x = AddUserAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserAnswerRequest) ProtoMessage() {}

func (x *AddUserAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserAnswerRequest.ProtoReflect.Descriptor instead.
func (*AddUserAnswerRequest) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{9}
}

func (x *AddUserAnswerRequest) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *AddUserAnswerRequest) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

type AddUserAnswerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddUserAnswerReply) Reset() {
	*x = AddUserAnswerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserAnswerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserAnswerReply) ProtoMessage() {}

func (x *AddUserAnswerReply) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserAnswerReply.ProtoReflect.Descriptor instead.
func (*AddUserAnswerReply) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{10}
}

func (x *AddUserAnswerReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetResultByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetResultByIdRequest) Reset() {
	*x = GetResultByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultByIdRequest) ProtoMessage() {}

func (x *GetResultByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultByIdRequest.ProtoReflect.Descriptor instead.
func (*GetResultByIdRequest) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{11}
}

func (x *GetResultByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetResultByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ResultName string `protobuf:"bytes,2,opt,name=resultName,proto3" json:"resultName,omitempty"`
	ResultDesc string `protobuf:"bytes,3,opt,name=resultDesc,proto3" json:"resultDesc,omitempty"`
}

func (x *GetResultByIdReply) Reset() {
	*x = GetResultByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_question_question_http_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultByIdReply) ProtoMessage() {}

func (x *GetResultByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_http_question_question_http_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultByIdReply.ProtoReflect.Descriptor instead.
func (*GetResultByIdReply) Descriptor() ([]byte, []int) {
	return file_http_question_question_http_proto_rawDescGZIP(), []int{12}
}

func (x *GetResultByIdReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetResultByIdReply) GetResultName() string {
	if x != nil {
		return x.ResultName
	}
	return ""
}

func (x *GetResultByIdReply) GetResultDesc() string {
	if x != nil {
		return x.ResultDesc
	}
	return ""
}

var File_http_question_question_http_proto protoreflect.FileDescriptor

var file_http_question_question_http_proto_rawDesc = []byte{
	0x0a, 0x21, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5e, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x58, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x5d, 0x0a, 0x09, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x3a, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x68, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x69, 0x0a, 0x15, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x31, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x6b,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x64, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x44, 0x65, 0x73, 0x63, 0x32, 0x9e, 0x05, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x82, 0x01, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76,
	0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x28, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f,
	0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7e, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76,
	0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x64, 0x75, 0x73,
	0x65, 0x72, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x7e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76,
	0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x62, 0x79, 0x69, 0x64, 0x42, 0x26, 0x5a, 0x24, 0x77, 0x75, 0x7a, 0x69,
	0x67, 0x6f, 0x77, 0x65, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_http_question_question_http_proto_rawDescOnce sync.Once
	file_http_question_question_http_proto_rawDescData = file_http_question_question_http_proto_rawDesc
)

func file_http_question_question_http_proto_rawDescGZIP() []byte {
	file_http_question_question_http_proto_rawDescOnce.Do(func() {
		file_http_question_question_http_proto_rawDescData = protoimpl.X.CompressGZIP(file_http_question_question_http_proto_rawDescData)
	})
	return file_http_question_question_http_proto_rawDescData
}

var file_http_question_question_http_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_http_question_question_http_proto_goTypes = []interface{}{
	(*Option)(nil),                    // 0: http.question.Option
	(*QuestionContent)(nil),           // 1: http.question.QuestionContent
	(*Questions)(nil),                 // 2: http.question.Questions
	(*CreatQuestionRequest)(nil),      // 3: http.question.CreatQuestionRequest
	(*CreatQuestionReply)(nil),        // 4: http.question.CreatQuestionReply
	(*ModifyQuestionRequest)(nil),     // 5: http.question.ModifyQuestionRequest
	(*ModifyQuestionReply)(nil),       // 6: http.question.ModifyQuestionReply
	(*ListQuestionByPageRequest)(nil), // 7: http.question.ListQuestionByPageRequest
	(*ListQuestionByPageReply)(nil),   // 8: http.question.ListQuestionByPageReply
	(*AddUserAnswerRequest)(nil),      // 9: http.question.AddUserAnswerRequest
	(*AddUserAnswerReply)(nil),        // 10: http.question.AddUserAnswerReply
	(*GetResultByIdRequest)(nil),      // 11: http.question.GetResultByIdRequest
	(*GetResultByIdReply)(nil),        // 12: http.question.GetResultByIdReply
}
var file_http_question_question_http_proto_depIdxs = []int32{
	0,  // 0: http.question.QuestionContent.options:type_name -> http.question.Option
	1,  // 1: http.question.Questions.contents:type_name -> http.question.QuestionContent
	1,  // 2: http.question.CreatQuestionRequest.contents:type_name -> http.question.QuestionContent
	1,  // 3: http.question.ModifyQuestionRequest.contents:type_name -> http.question.QuestionContent
	1,  // 4: http.question.ListQuestionByPageReply.contents:type_name -> http.question.QuestionContent
	3,  // 5: http.question.Question.CreatQuestion:input_type -> http.question.CreatQuestionRequest
	5,  // 6: http.question.Question.ModifyQuestion:input_type -> http.question.ModifyQuestionRequest
	7,  // 7: http.question.Question.ListQuestionByPage:input_type -> http.question.ListQuestionByPageRequest
	9,  // 8: http.question.Question.AddUserAnswer:input_type -> http.question.AddUserAnswerRequest
	11, // 9: http.question.Question.GetResultById:input_type -> http.question.GetResultByIdRequest
	4,  // 10: http.question.Question.CreatQuestion:output_type -> http.question.CreatQuestionReply
	6,  // 11: http.question.Question.ModifyQuestion:output_type -> http.question.ModifyQuestionReply
	8,  // 12: http.question.Question.ListQuestionByPage:output_type -> http.question.ListQuestionByPageReply
	10, // 13: http.question.Question.AddUserAnswer:output_type -> http.question.AddUserAnswerReply
	12, // 14: http.question.Question.GetResultById:output_type -> http.question.GetResultByIdReply
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_http_question_question_http_proto_init() }
func file_http_question_question_http_proto_init() {
	if File_http_question_question_http_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_http_question_question_http_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Questions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatQuestionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyQuestionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuestionByPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuestionByPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserAnswerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_question_question_http_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_http_question_question_http_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_http_question_question_http_proto_goTypes,
		DependencyIndexes: file_http_question_question_http_proto_depIdxs,
		MessageInfos:      file_http_question_question_http_proto_msgTypes,
	}.Build()
	File_http_question_question_http_proto = out.File
	file_http_question_question_http_proto_rawDesc = nil
	file_http_question_question_http_proto_goTypes = nil
	file_http_question_question_http_proto_depIdxs = nil
}
